/**** A few notes about apache kafka deployment: ****/

//download zookeeper src distribution
http://apache.mirror.vexxhost.com/kafka/0.8.1.1/kafka_2.9.2-0.8.1.1.tgz

//unzip the .tgz file (If you have GNU tar (Linux system) you can use the z option directly)
tar xvzf kafka_2.9.2-0.8.1.1.tgz

//manage the installation
ln -s kafka_2.9.2-0.8.1.1 kafka

//set up the necessary env variables  
vim /etc/profile //this is a system-wide .profile file for the Bourne shell (sh(1)) and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).
export KAFKA_HOME="/home/marc/Downloads/kafka"
export PATH=$PATH:$KAFKA_HOME/bin

/************************************************************************/
//setting up the env variables can also be down via:
1.sudo nano /etc/environment
2.add whatever env var needed
3.source /etc/environment
/************************************************************************/

//manage the JVM opts due to the fact that my server uses 32-bit java
/*-------------------------------Error 1------------------------------------*/
Unrecognized VM option '+UseCompressedOops'
Could not create the Java virtual machine
/*--------------------------------------------------------------------------*/

/**** Solution ****/
	$ vi bin/kafka-run-class.sh
	// Search for "KAFKA_JVM_PERFORMANCE_OPTS" token & remove '-XX:+UseCompressedOops' from that line.

/*-------------------------------Error 2------------------------------------*/
Error occurred during initialization of VM 
Could not reserve enough space for object heap
Could not create the Java virtual machine.
/*--------------------------------------------------------------------------*/

/**** Solution ****/
	$ vi kafka-server-start.sh
	// Search for "export KAFKA_HEAP_OPTS="-Xmx1G -Xms1G"" token & change it to "export KAFKA_HEAP_OPTS="-Xmx256M -Xms256M""


//start the kafka server
	$ bin/kafka-server-start.sh config/server.properties
/*----------------------------------------------------------------------------------*/
[2014-12-07 10:59:51,114] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,358] INFO Property broker.id is overridden to 0 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,358] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,358] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,358] INFO Property log.retention.check.interval.ms is overridden to 60000 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,359] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,359] INFO Property log.segment.bytes is overridden to 536870912 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,359] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,359] INFO Property num.network.threads is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,360] INFO Property num.partitions is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,361] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,361] INFO Property socket.receive.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,362] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,362] INFO Property socket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,362] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,364] INFO Property zookeeper.connection.timeout.ms is overridden to 1000000 (kafka.utils.VerifiableProperties)
[2014-12-07 10:59:51,714] INFO [Kafka Server 0], starting (kafka.server.KafkaServer)
[2014-12-07 10:59:51,761] INFO [Kafka Server 0], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2014-12-07 10:59:51,867] INFO Starting ZkClient event thread. (org.I0Itec.zkclient.ZkEventThread)
[2014-12-07 10:59:51,916] INFO Client environment:zookeeper.version=3.3.3-1203054, built on 11/17/2011 05:47 GMT (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:host.name=ubuntu (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.version=1.6.0_45 (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.vendor=Sun Microsystems Inc. (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.home=/usr/lib/jvm/java-6-oracle/jre (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.class.path=:/home/marc/Downloads/kafka/bin/../core/build/dependant-libs-2.8.0/*.jar:/home/marc/Downloads/kafka/bin/../perf/build/libs//kafka-perf_2.8.0*.jar:/home/marc/Downloads/kafka/bin/../clients/build/libs//kafka-clients*.jar:/home/marc/Downloads/kafka/bin/../examples/build/libs//kafka-examples*.jar:/home/marc/Downloads/kafka/bin/../contrib/hadoop-consumer/build/libs//kafka-hadoop-consumer*.jar:/home/marc/Downloads/kafka/bin/../contrib/hadoop-producer/build/libs//kafka-hadoop-producer*.jar:/home/marc/Downloads/kafka/bin/../libs/jopt-simple-3.2.jar:/home/marc/Downloads/kafka/bin/../libs/kafka_2.9.2-0.8.1.1.jar:/home/marc/Downloads/kafka/bin/../libs/kafka_2.9.2-0.8.1.1-javadoc.jar:/home/marc/Downloads/kafka/bin/../libs/kafka_2.9.2-0.8.1.1-scaladoc.jar:/home/marc/Downloads/kafka/bin/../libs/kafka_2.9.2-0.8.1.1-sources.jar:/home/marc/Downloads/kafka/bin/../libs/log4j-1.2.15.jar:/home/marc/Downloads/kafka/bin/../libs/metrics-core-2.2.0.jar:/home/marc/Downloads/kafka/bin/../libs/scala-library-2.9.2.jar:/home/marc/Downloads/kafka/bin/../libs/slf4j-api-1.7.2.jar:/home/marc/Downloads/kafka/bin/../libs/snappy-java-1.0.5.jar:/home/marc/Downloads/kafka/bin/../libs/zkclient-0.3.jar:/home/marc/Downloads/kafka/bin/../libs/zookeeper-3.3.4.jar:/home/marc/Downloads/kafka/bin/../core/build/libs/kafka_2.8.0*.jar (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.library.path=/usr/lib/jvm/java-6-oracle/jre/lib/i386/server:/usr/lib/jvm/java-6-oracle/jre/lib/i386:/usr/lib/jvm/java-6-oracle/jre/../lib/i386:/usr/java/packages/lib/i386:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:os.arch=i386 (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:os.version=3.13.0-39-generic (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:user.name=marc (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:user.home=/home/marc (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,916] INFO Client environment:user.dir=/home/marc/Downloads/kafka_2.9.2-0.8.1.1 (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:51,917] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=org.I0Itec.zkclient.ZkClient@6d0040 (org.apache.zookeeper.ZooKeeper)
[2014-12-07 10:59:52,057] INFO Opening socket connection to server localhost/127.0.0.1:2181 (org.apache.zookeeper.ClientCnxn)
[2014-12-07 10:59:52,076] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2014-12-07 10:59:52,230] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x149ded030cc074d, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2014-12-07 10:59:52,232] INFO zookeeper state changed (SyncConnected) (org.I0Itec.zkclient.ZkClient)
[2014-12-07 10:59:53,329] INFO Found clean shutdown file. Skipping recovery for all logs in data directory '/tmp/kafka-logs' (kafka.log.LogManager)
[2014-12-07 10:59:53,335] INFO Loading log 'test-0' (kafka.log.LogManager)
[2014-12-07 10:59:53,574] INFO Completed load of log test-0 with log end offset 11 (kafka.log.Log)
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
[2014-12-07 10:59:53,678] INFO Starting log cleanup with a period of 60000 ms. (kafka.log.LogManager)
[2014-12-07 10:59:53,681] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2014-12-07 10:59:53,847] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2014-12-07 10:59:53,851] INFO [Socket Server on Broker 0], Started (kafka.network.SocketServer)
[2014-12-07 10:59:54,089] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2014-12-07 10:59:54,191] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2014-12-07 10:59:54,719] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2014-12-07 10:59:54,785] INFO Registered broker 0 at path /brokers/ids/0 with address ubuntu:9092. (kafka.utils.ZkUtils$)
[2014-12-07 10:59:54,841] INFO [Kafka Server 0], started (kafka.server.KafkaServer)
[2014-12-07 10:59:55,682] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions [test,0] (kafka.server.ReplicaFetcherManager)
[2014-12-07 10:59:55,778] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions [test,0] (kafka.server.ReplicaFetcherManager)
/*----------------------------------------------------------------------------------*/

//verify it in zookeeper client
	$ $ZOOKEEPER_HOME/bin/zkCli.sh
/*----------------------------------------------------------------------------------*/
[zk: localhost:2181(CONNECTED) 0] ls /
[zookeeper, admin, consumers, config, controller, storm, brokers, controller_epoch]
/*----------------------------------------------------------------------------------*/


//simple testing with kafka
1. Create a topic
	$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test
1.1 verify that 'test' topic
	$ bin/kafka-topics.sh --list --zookeeper localhost:2181
	/*----------------------------------------------------------------------------------*/
	test
	/*----------------------------------------------------------------------------------*/

2. Send some messages
	$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
	This is a message
	This is another message 

3. Start a consumer
	$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning
	/*----------------------------------------------------------------------------------*/
	This is a message
	This is another message
	/*----------------------------------------------------------------------------------*/